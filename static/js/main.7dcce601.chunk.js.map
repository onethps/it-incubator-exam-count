{"version":3,"sources":["Counter.module.css","Counter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Counter","props","styleLastNumber","count","lastNumber","style","staticNumber","className","mainBox","row","buttonBlock","btnInc","disabled","onClick","setCount","btnReset","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,IAAM,qBAAqB,YAAc,6BAA6B,aAAe,8BAA8B,gBAAkB,iCAAiC,OAAS,wBAAwB,SAAW,4B,mKCS1PC,EAAU,SAACC,GAGpB,IAAMC,EAAkBD,EAAME,QAAUF,EAAMG,WAAaC,IAAMH,gBAAkBG,IAAMC,aAIzF,OACI,qBAAKC,UAAWF,IAAMG,QAAtB,SACI,sBAAKD,UAAWF,IAAMI,IAAtB,UAEI,qBAAKF,UAAWL,EAAhB,SAAkCD,EAAME,QAExC,sBAAKI,UAAWF,IAAMK,YAAtB,UACI,wBAAQH,UAAWF,IAAMM,OAAQC,SAAUX,EAAME,QAAUF,EAAMG,WAAYS,QAV5E,kBAAMZ,EAAMa,SAASb,EAAME,MAAQ,IAUpC,iBACA,wBAAQI,UAAWF,IAAMU,SAAUH,SAA0B,IAAhBX,EAAME,MAAaU,QAV7D,kBAAMZ,EAAMa,SAAS,IAUxB,4BCDLE,MAnBf,WAAgB,IAAD,EAEaC,mBAAiB,GAF9B,mBAENd,EAFM,KAECW,EAFD,KAMb,OACF,8BACI,cAAC,EAAD,CAEIX,MAAOA,EACPC,WARa,EASbU,SAAUA,OCHHI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7dcce601.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBox\":\"Counter_mainBox__14WQB\",\"row\":\"Counter_row__DelzU\",\"buttonBlock\":\"Counter_buttonBlock__1aINR\",\"staticNumber\":\"Counter_staticNumber__3Ovwy\",\"styleLastNumber\":\"Counter_styleLastNumber__3tzoA\",\"btnInc\":\"Counter_btnInc__1fGJR\",\"btnReset\":\"Counter_btnReset__bFzCR\"};","import React, {useState} from \"react\";\r\nimport style from './Counter.module.css'\r\n\r\ntype countType = {\r\n    count: number\r\n    lastNumber: number\r\n    setCount: (on:number) => void\r\n}\r\n\r\n\r\nexport const Counter = (props:countType) => {\r\n\r\n\r\n    const styleLastNumber = props.count === props.lastNumber ? style.styleLastNumber : style.staticNumber\r\n    const addCount = () => props.setCount(props.count + 1)\r\n    const resetCount = () => props.setCount(0)\r\n\r\n    return (\r\n        <div className={style.mainBox}>\r\n            <div className={style.row}>\r\n\r\n                <div className={styleLastNumber}>{props.count}</div>\r\n\r\n                <div className={style.buttonBlock}>\r\n                    <button className={style.btnInc} disabled={props.count === props.lastNumber} onClick={addCount}>inc</button>\r\n                    <button className={style.btnReset} disabled={props.count === 0} onClick={resetCount}>reset</button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {Counter} from \"./Counter\";\n\nfunction App() {\n\n  const [count, setCount] = useState<number>(0);\n  const lastNumber = 5;\n\n\n  return (\n<div>\n    <Counter\n\n        count={count}\n        lastNumber={lastNumber}\n        setCount={setCount}\n    />\n</div>\n\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}